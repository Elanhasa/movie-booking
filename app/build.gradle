apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
  compileSdkVersion 25
  buildToolsVersion "26.0.0-rc1"
  defaultConfig {
    applicationId "io.github.lamtran.moviebooking"
    minSdkVersion 15
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    dataBinding {
      enabled = true
    }

    javaCompileOptions {
      annotationProcessorOptions.includeCompileClasspath = true
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

def android = "25.3.1"
def dagger = "2.11"
def timber = "4.5.1"

def espresso = "2.2.2"
def autoValue = "1.4-rc3"
def junit = "4.12"

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  compile "com.android.support:appcompat-v7:$android"
  compile "com.android.support:recyclerview-v7:$android"

  compile "com.google.dagger:dagger:HEAD-20170414.151443-36"//dagger"
  compile "com.google.dagger:dagger-android:HEAD-20170414.151500-1"//dagger"
  compile "com.google.dagger:dagger-android-support:HEAD-SNAPSHOT"//dagger"
  annotationProcessor "com.google.dagger:dagger-compiler:HEAD-20170414.151448-16"//dagger"
  annotationProcessor "com.google.dagger:dagger-android-processor:HEAD-20170414.151515-1"//dagger"

  compile "io.reactivex.rxjava2:rxandroid:2.0.1"

  compile "com.google.auto.value:auto-value:$autoValue"
  provided "com.google.auto.value:auto-value:$autoValue"

  annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:0.2.5"

  compile "com.jakewharton.timber:timber:$timber"

  androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso", {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.google.code.findbugs'
  })
  testCompile "junit:junit:$junit"
}